# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2017-07-09 00:59
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0018_auto_20170509_0017'),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditToBalance',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Transaction')),
                ('matter', models.TextField(blank=True)),
            ],
            bases=('core.transaction',),
        ),
        migrations.CreateModel(
            name='SpecificInsertion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_cost', models.FloatField(blank=True, null=True)),
                ('total_price', models.FloatField(blank=True, null=True)),
                ('discount', models.FloatField(blank=True, null=True)),
                ('basic_cost', models.FloatField(blank=True, null=True)),
                ('delivery_cost', models.FloatField(blank=True, null=True)),
                ('sum_of_lot_prices', models.FloatField(blank=True, null=True)),
                ('difference', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True)),
                ('compensation_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='compensation_account', to='core.Account')),
                ('deliverer_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deliverer_account', to='core.Account')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Supplier')),
            ],
        ),
        migrations.RemoveField(
            model_name='insertion',
            name='basic_cost',
        ),
        migrations.RemoveField(
            model_name='insertion',
            name='compensation_account',
        ),
        migrations.RemoveField(
            model_name='insertion',
            name='date_creation',
        ),
        migrations.RemoveField(
            model_name='insertion',
            name='date_modified',
        ),
        migrations.RemoveField(
            model_name='insertion',
            name='deliverer_account',
        ),
        migrations.RemoveField(
            model_name='insertion',
            name='delivery_cost',
        ),
        migrations.RemoveField(
            model_name='insertion',
            name='difference',
        ),
        migrations.RemoveField(
            model_name='insertion',
            name='discount',
        ),
        migrations.RemoveField(
            model_name='insertion',
            name='entered_by_user',
        ),
        migrations.RemoveField(
            model_name='insertion',
            name='payer_account',
        ),
        migrations.RemoveField(
            model_name='insertion',
            name='status',
        ),
        migrations.RemoveField(
            model_name='insertion',
            name='sum_of_lot_prices',
        ),
        migrations.RemoveField(
            model_name='insertion',
            name='supplier',
        ),
        migrations.RemoveField(
            model_name='insertion',
            name='total_cost',
        ),
        migrations.RemoveField(
            model_name='insertion',
            name='total_price',
        ),
        migrations.RemoveField(
            model_name='insertion',
            name='user_comment',
        ),
        migrations.AddField(
            model_name='transaction',
            name='last_modified',
            field=models.DateField(auto_now=True),
        ),
        migrations.AddField(
            model_name='insertion',
            name='specific_insertions',
            field=models.ManyToManyField(to='core.SpecificInsertion'),
        ),
    ]
